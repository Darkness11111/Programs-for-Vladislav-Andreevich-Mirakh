Assign vector:
vector1 == (3.4, 5.6)
vector2 = vector1 =  (3.4, 5.6)



Operator +:
vector1 = (3.4, 5.6)
vector3 = (7.5, 6)
vector1 + vector3 = (10.9, 11.6)



Operator -:
vector1 = (3.4, 5.6)
vector3 = (7.5, 6)
vector1 - vector3 = (-4.1, -0.4)



Operator +=:
vector1 = (3.4, 5.6)
vector3 = (7.5, 6)
vector1 += vector3; vector1 =  (10.9, 11.6)



Operator -=:
vector1 = (10.9, 11.6)
vector3 = (7.5, 6)
vector1 -= vector3; vector1 =  (3.4, 5.6)



Operator -(unary):
vector1 = (3.4, 5.6)
-vector1 = (-3.4, -5.6)



Operator *(on digit):
vector1 = (3.4, 5.6)
k = 3.5
vector1 * k = (11.9, 19.6)
k * vector1 = (11.9, 19.6)



Operator /:
vector1 = (3.4, 5.6)
k = 3.5
vector1 / k = (0.971429, 1.6)



Operator *(scalar):
vector1 = (3.4, 5.6)
vector2 = (3.4, 5.6)
vector1 * vector2 = 42.92



Operator ^:
vector1 = (3.4, 5.6)
vector3 = (7.5, 6)
vector1 ^ vector2 = -21.6



len( ):
vector1 = (3.4, 5.6)
vector1.len( ) = 6.55134



square_len( ):
vector1 = (3.4, 5.6)
vector1.square_len( ) = 42.92



reset( ):
vector1 = (3.4, 5.6)
vector1.reset(1., 0.). vector1 = (1, 0)



orthogonal( ):
vector1 = (1, 0)
vector1.orthogonal( ) = (0, -1)



rotate( ):
vector1 = (1, 0)
vector1.rotate(45). vector1 = (0.707107, 0.707107)



get_rotated( ):
vector1 = (0.707107, 0.707107)
vector1.get_rotated(45) = (-1.73205e-07, 1)



norm( ):
vector1 = (0.707107, 0.707107)
vector1.norm( ) = (0.707107, 0.707107)

